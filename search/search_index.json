{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":""},{"location":"index.html#soft-robotics-developer-manual","title":"Soft-Robotics Developer Manual","text":"<p>Developer manual for the Soft Robotics research group at roboticslab-uc3m.</p> <p>Currently hosted at https://robots.uc3m.es/soft-robotics-developer-manual/</p>"},{"location":"index.html#how-to-install-mkdocs-and-the-required-plugins","title":"How to install mkdocs and the required plugins","text":"<ol> <li>Install mkdocs through pip with the following command.    <pre><code>pip install mkdocs\n</code></pre></li> <li>Install the required plugins after cloning the repository with the following command.    <pre><code>pip install -r requirements.txt\n</code></pre>    When installing in Ubuntu versions prior to 22.04 you may encounter problems installing various of the plugins inside <code>requirements.txt</code>, which need to be installed manually.</li> </ol>"},{"location":"index.html#how-to-serve-on-localhost","title":"How to serve on localhost","text":"<p>When modifying the website it is useful to first test the changes locally. This can be done by opening and refreshing the website index.html generated inside the file folder [RECOMMENDED] or by serving on <code>localhost</code>. The latter can be done by following these steps:</p> <ol> <li>From the root of the project, run the following command:    <pre><code>mkdocs serve\n</code></pre></li> <li>You can now browse the site at the default location: http://127.0.0.1:8000</li> </ol>"},{"location":"index.html#how-to-upload-changes-to-github","title":"How to upload changes to GitHub","text":"<p>This project is managed as any project on GitHub. You may use Git or even the GitHub web interface, both on which you can find many tutorials online. The following points are specific to the MkDocs mechanism used:</p> <ol> <li> <p>Please do not upload the <code>site/</code> folder. It is auto-generated locally, and the same should happen on the MkDocs servers.</p> </li> <li> <p>It is safe to <code>git push</code> to any upstream branch, just remember that what is on <code>master</code> is what will be actually rendered as the website.</p> </li> </ol>"},{"location":"index.html#if-you-have-any-doubts-or-comments","title":"If you have any doubts or comments","text":"<p>In case of doubts please feel free to create an issue here.</p>"},{"location":"introduction.html","title":"Introduction","text":""},{"location":"introduction.html#introduction","title":"Introduction","text":""},{"location":"introduction.html#welcome","title":"Welcome","text":"<p>In this website you will have everything required for running the demos with the various soft robotic platforms.</p>"},{"location":"SOFA/index.html","title":"SOFA","text":""},{"location":"SOFA/index.html#sofa","title":"SOFA","text":"<p>SOFA is an open-source framework for interactive mechanical simulation, with emphasis on biomechanics and robotics. A series of plugins have been developed to make use of the FEM capabilities and solvers which SOFA offers for simulating soft robotic platforms.</p> <p>Examples of our platforms can be found in this Github repository.</p>"},{"location":"instron/demo.html","title":"Demo","text":""},{"location":"instron/demo.html#demo-space-navigator-inverse-kinematcs","title":"Demo: Space Navigator (Inverse Kinematcs)","text":""},{"location":"instron/demo.html#the-following-steps-are-meant-to-be-launched-on-the-soft-robotics-pc-next-to-lisbeth","title":"The following steps are meant to be launched on the Soft Robotics PC, next to Lisbeth :)","text":"<p>Throughout this section, the required steps to run the Space Navigator demo of the soft neck are described. </p> <ol> <li>Plug the spnav dongle the PC.</li> <li>Plug the PCAN-USB adapter to the PC.</li> <li>On a terminal, run the following command for setting up the CAN bus port:</li> </ol> <p></p><pre><code>cd ~/Desktop &amp;&amp; sudo ./init_can.sh\n</code></pre> This file contains the following command, which sets up the physical port at a baud rate of 1MHz: <pre><code>ip link set can0 up txqueuelen 1000 type can bitrate 1000000 restart-ms 100\n</code></pre> <ol> <li>On a terminal, launch yarpserver through the following command:</li> </ol> <p></p><pre><code>yarpserver --write\n</code></pre> 5. Open the yarpgui for individually launching the different required applications. Press Alt+F2 at the same time to pop up the command window and type yarpmanager.  6. Open SoftNeckControl_App inside the Applications folder and launch the following apps in the described order by clicking the green launch button after selecting said app. 7. Launch SpaceNavigator. 8. Launch launchCanBus. At this point you can turn on the Power Supply with a voltage of 16V and tense the tendons through the easiest method. This is by means of the remote procedure calls (RPC). In order for this to work, the launchCanBus application needs to be launched. The RPC commands can be accessed through the following command: <pre><code>yarp rpc /softneck/rpc:i\n</code></pre> <p>You can tighten and untighten the tendons with the set pos command, which gives a distance(m) value for the motor to rotate. It is suggested to use increments or decrements of 0.01 as a starting value.</p> <pre><code>set pos 0 0.01\n</code></pre> <p>This will shorten the first tendon a length of 0.01m. The ID associated to each motor is shown in the following figure.</p>"},{"location":"origami/index.html","title":"Index","text":""},{"location":"origami/demo.html","title":"Demo","text":""},{"location":"origami/demo.html#demo-origami-modular-robot","title":"Demo: Origami modular robot","text":""},{"location":"origami/demo.html#the-following-steps-are-meant-to-be-launched-on-the-rpi","title":"The following steps are meant to be launched on the RPI","text":"<p>Throughout this section, the required steps to run the Space Navigator demo of the soft neck are described. </p> <ol> <li>Plug the spnav dongle the PC.</li> <li>Plug the PCAN-USB adapter to the PC.</li> <li>On a terminal, run the following command for setting up the CAN bus port:</li> </ol> <p></p><pre><code>cd ~/Desktop &amp;&amp; sudo ./init_can.sh\n</code></pre> This file contains the following command, which sets up the physical port at a baud rate of 1MHz: <pre><code>ip link set can0 up txqueuelen 1000 type can bitrate 1000000 restart-ms 100\n</code></pre> <ol> <li>On a terminal, launch yarpserver through the following command:</li> </ol> <p></p><pre><code>yarpserver --write\n</code></pre> 5. Open the yarpgui for individually launching the different required applications. Press Alt+F2 at the same time to pop up the command window and type yarpmanager.  6. Open SoftNeckControl_App inside the Applications folder and launch the following apps in the described order by clicking the green launch button after selecting said app. 7. Launch SpaceNavigator. 8. Launch launchCanBus. At this point you can turn on the Power Supply with a voltage of 16V and tense the tendons through the easiest method. This is by means of the remote procedure calls (RPC). In order for this to work, the launchCanBus application needs to be launched. The RPC commands can be accessed through the following command: <pre><code>yarp rpc /softneck/rpc:i\n</code></pre> <p>You can tighten and untighten the tendons with the set pos command, which gives a distance(m) value for the motor to rotate. It is suggested to use increments or decrements of 0.01 as a starting value.</p> <pre><code>set pos 0 0.01\n</code></pre> <p>This will shorten the first tendon a length of 0.01m. The ID associated to each motor is shown in the following figure.</p>"},{"location":"roberto/demo.html","title":"Demo","text":""},{"location":"roberto/demo.html#demo-space-navigator-inverse-kinematcs","title":"Demo: Space Navigator (Inverse Kinematcs)","text":""},{"location":"roberto/demo.html#the-following-steps-are-meant-to-be-launched-on-the-soft-robotics-pc-next-to-lisbeth","title":"The following steps are meant to be launched on the Soft Robotics PC, next to Lisbeth :)","text":"<p>Throughout this section, the required steps to run the Space Navigator demo of the soft neck are described. </p> <ol> <li>Plug the spnav dongle the PC.</li> <li>Plug the PCAN-USB adapter to the PC.</li> <li>On a terminal, run the following command for setting up the CAN bus port:</li> </ol> <p></p><pre><code>cd ~/Desktop &amp;&amp; sudo ./init_can.sh\n</code></pre> This file contains the following command, which sets up the physical port at a baud rate of 1MHz: <pre><code>ip link set can0 up txqueuelen 1000 type can bitrate 1000000 restart-ms 100\n</code></pre> <ol> <li>On a terminal, launch yarpserver through the following command:</li> </ol> <p></p><pre><code>yarpserver --write\n</code></pre> 5. Open the yarpgui for individually launching the different required applications. Press Alt+F2 at the same time to pop up the command window and type yarpmanager.  6. Open SoftNeckControl_App inside the Applications folder and launch the following apps in the described order by clicking the green launch button after selecting said app. 7. Launch SpaceNavigator. 8. Launch launchCanBus. At this point you can turn on the Power Supply with a voltage of 16V and tense the tendons through the easiest method. This is by means of the remote procedure calls (RPC). In order for this to work, the launchCanBus application needs to be launched. The RPC commands can be accessed through the following command: <pre><code>yarp rpc /softneck/rpc:i\n</code></pre> <p>You can tighten and untighten the tendons with the set pos command, which gives a distance(m) value for the motor to rotate. It is suggested to use increments or decrements of 0.01 as a starting value.</p> <pre><code>set pos 0 0.01\n</code></pre> <p>This will shorten the first tendon a length of 0.01m. The ID associated to each motor is shown in the following figure.</p>"},{"location":"softarm/index.html","title":"Index","text":""},{"location":"softarm/demo.html","title":"Soft Gripper Demos","text":""},{"location":"softarm/demo.html#soft-gripper-demos","title":"Soft Gripper Demos","text":""},{"location":"softarm/demo.html#setup-and-calibration","title":"Setup and Calibration","text":"<p>For the demos to work the best the finger's tendons need to be tightened first without the fingers curling excessively. A first approach can be done manually using the blue stick with the yellow head by sticking it through the honeycomb panels and rotating the encoders (black ring) on the desired sense. For tightening the tendons attached to the upper row of motors rotate the encoder counterclockwise. For those in the lower row, rotate clockwise.</p> <p> </p> <ol> <li> <p>Launch yarpserver with the following command.</p> <p></p><pre><code>yarpserver --write\n</code></pre> 2. Setup the port for CAN communications at a baud rate of 1MHz with the following command. <p></p><pre><code>sudo ip link set can0 up txqueuelen 1000 type can bitrate 1000000\n</code></pre> 3. For checking that a communication has been stablished between the PC and the gripper use the candump command in a new terminal. <pre><code>candump can0 \n</code></pre> </li> <li> <p>Change directory to the required one for launching the can bus application in a new terminal.</p> <pre><code>cd repos/sofia-yarp-devices/share/contexts/launchCanBus\n</code></pre> </li> <li> <p>Launch the CAN bus application.</p> <pre><code>YARP_ROBOT_NAME=teoSoftGripper launchCanBus --from softGripper.ini\n</code></pre> </li> <li> <p>At this point you can turn on the Power Supply with a voltage of 36 V and tense the tendons and align the fingers. This is done by means of the remote procedure calls (RPC). The RPC commands can be accessed through the following command:</p> <pre><code>yarp rpc /teo/softgripper/rpc:i\n</code></pre> </li> </ol> <p>You can tighten and untighten the tendons with the set pos command, which gives a distance(m) value for the motor to rotate. It is suggested to use increments or decrements of 0.01 as a starting value.</p> <pre><code>set pos X 0.01\n</code></pre> <p>Where X is the Motor ID-1, as it starts with 0 instead of 1. A figure with the IDs and the rotation movements for each of the three base motors, one for each finger:</p> <p></p>"},{"location":"softarm/demo.html#demo-ball-juggling","title":"Demo: Ball Juggling","text":"<p>A demonstration of the following demo can be seen in the following links: - Soft Gripper Manipulability - Soft Gripper Grasping Experiments</p> <p>Throughout this section, the required steps to run the Space Navigator demo of the soft neck are described. </p> <ol> <li>Plug the PCAN-USB adapter to the PC.</li> <li>On a terminal, run the following command for setting up the CAN bus port at a baud rate of 1MHz:</li> </ol> <pre><code>ip link set can0 up txqueuelen 1000 type can bitrate 1000000 restart-ms 100\n</code></pre> <ol> <li>On the same terminal, launch yarpserver through the following command:</li> </ol> <p></p><pre><code>yarpserver --write\n</code></pre> 5. Open the yarpgui for individually launching the different required applications. Press Alt+F2 at the same time to pop up the command window and type yarpmanager.  6. Open SoftNeckControl_App inside the Applications folder and launch the following apps in the described order by clicking the green launch button after selecting said app. 7. Launch SpaceNavigator. 8. Launch launchCanBus. At this point you can turn on the Power Supply with a voltage of 35 V and tense the tendons through the easiest method. This is by means of the remote procedure calls (RPC). In order for this to work, the launchCanBus application needs to be launched. The RPC commands can be accessed through the following command: <pre><code>yarp rpc /softneck/rpc:i\n</code></pre> <p>You can tighten and untighten the tendons with the set pos command, which gives a distance(m) value for the motor to rotate. It is suggested to use increments or decrements of 0.01 as a starting value.</p> <pre><code>set pos 0 0.01\n</code></pre> <p>This will shorten the first tendon a length of 0.01m. The ID associated to each motor is shown in the following figure.</p>"},{"location":"softarm/motors.html","title":"Maxon Model 283856 Motor","text":""},{"location":"softarm/motors.html#maxon-model-283856-motor","title":"Maxon Model 283856 Motor","text":"<p>The motor's datasheet can be found at this link.</p> <p></p>"},{"location":"softarm/motors.html#current-motor-configuration","title":"Current Motor configuration","text":"<p>soft-arm-current-configuration.csv</p> Motor Passband(current controller) Passband(position controller) Intertia(kgm2 E-7) ID1 2200 150 100 ID2 2000 150 100 ID3 nan nan ID4 2000 150 100 ID5 2200 150 100 ID6 2000 nan ID7 2200 120 60 ID8 2200 150 100 ID9 nan nan"},{"location":"softarm/motors.html#values-at-nominal-voltage","title":"Values at Nominal Voltage","text":"<p>soft-arm-motor-NV.csv</p> Nominal voltage 24 V No load speed 7310 rpm No load current 47.6 mA Nominal speed 4390 rpm Nominal torque (max. continuous torque) 27 mNm Nominal current (max. continuous current) 0.766 A Stall torque 114 mNm Stall current 3.74 A Max. efficiency 79 %"},{"location":"softarm/motors.html#characteristics","title":"Characteristics","text":"<p>soft-arm-motor-C.csv</p> Terminal resistance phase to phase 6.42 \u2126 Terminal inductance phase to phase 2.75 mH Torque constant 30.5 mNm/A Speed constant 135 rpm/V Speed / torque gradient 12.9 rpm/mNm Mechanical time constant 20.2 ms Rotor inertia 150 gcm\u00b2 Thermal resistance housing-ambient 6.73 K/W Thermal resistance winding-housing 3.92 K/W Thermal time constant winding 11.4 s Thermal time constant motor 296 s Ambient temperature -40...+100 \u00b0C Max. winding temperature +125 \u00b0C"},{"location":"softarm/motors.html#mechanical-data","title":"Mechanical Data","text":"<p>soft-arm-motor-MD.csv</p> Bearing type keine Max. speed 10000 rpm Axial play 0 mm; at radial load &lt; 0 N - 0 mm; at radial load &gt; 0 N Max. axial load (dynamic) 0 N Max. force for press fits (static) 0 N (static; shaft supported) 0 N Max. radial load 0 N; 5 mm from flange Number of pole pairs 8 Number of phases 3 Number of autoclave cycles 0 Weight 89 g"},{"location":"softgripper/index.html","title":"Index","text":""},{"location":"softgripper/demo.html","title":"Demo","text":""},{"location":"softgripper/demo.html#soft-gripper-demos","title":"Soft Gripper Demos","text":""},{"location":"softgripper/demo.html#setup-and-calibration","title":"Setup and Calibration","text":"<p>For the demos to work the best the finger's tendons need to be tightened first without the fingers curling excessively. A first approach can be done manually using the blue stick with the yellow head by sticking it through the honeycomb panels and rotating the encoders (black ring) on the desired sense. For tightening the tendons attached to the upper row of motors rotate the encoder counterclockwise. For those in the lower row, rotate clockwise.</p> <p> </p> <ol> <li> <p>Launch yarpserver with the following command.</p> <p></p><pre><code>yarpserver --write\n</code></pre> 2. Setup the port for CAN communications at a baud rate of 1MHz with the following command. <p></p><pre><code>sudo ip link set can0 up txqueuelen 1000 type can bitrate 1000000\n</code></pre> 3. For checking that a communication has been stablished between the PC and the gripper use the candump command in a new terminal. <pre><code>candump can0 \n</code></pre> </li> <li> <p>Change directory to the required one for launching the can bus application in a new terminal.</p> <pre><code>cd repos/sofia-yarp-devices/share/contexts/launchCanBus\n</code></pre> </li> <li> <p>Launch the CAN bus application.</p> <pre><code>YARP_ROBOT_NAME=teoSoftGripper launchCanBus --from softGripper.ini\n</code></pre> </li> <li> <p>At this point you can turn on the Power Supply with a voltage of 24 V and tense the tendons and align the fingers. This is done by means of the remote procedure calls (RPC). The RPC commands can be accessed through the following command:</p> <pre><code>yarp rpc /teo/softgripper/rpc:i\n</code></pre> </li> </ol> <p>You can tighten and untighten the tendons with the set pos command, which gives a distance(m) value for the motor to rotate. It is suggested to use increments or decrements of 0.01 as a starting value.</p> <pre><code>set pos X 0.01\n</code></pre> <p>Where X is the Motor ID-1, as it starts with 0 instead of 1. A figure with the IDs and the rotation movements for each of the three base motors, one for each finger:</p> <p></p>"},{"location":"softgripper/demo.html#demo-ball-juggling","title":"Demo: Ball Juggling","text":"<p>A demonstration of the following demo can be seen in the following links: - Soft Gripper Manipulability - Soft Gripper Grasping Experiments</p> <p>Throughout this section, the required steps to run the Space Navigator demo of the soft neck are described. </p> <ol> <li>Plug the PCAN-USB adapter to the PC.</li> <li>On a terminal, run the following command for setting up the CAN bus port at a baud rate of 1MHz:</li> </ol> <pre><code>ip link set can0 up txqueuelen 1000 type can bitrate 1000000 restart-ms 100\n</code></pre> <ol> <li>On the same terminal, launch yarpserver through the following command:</li> </ol> <p></p><pre><code>yarpserver --write\n</code></pre> 5. Open the yarpgui for individually launching the different required applications. Press Alt+F2 at the same time to pop up the command window and type yarpmanager.  6. Open SoftNeckControl_App inside the Applications folder and launch the following apps in the described order by clicking the green launch button after selecting said app. 7. Launch SpaceNavigator. 8. Launch launchCanBus. At this point you can turn on the Power Supply with a voltage of 35 V and tense the tendons through the easiest method. This is by means of the remote procedure calls (RPC). In order for this to work, the launchCanBus application needs to be launched. The RPC commands can be accessed through the following command: <pre><code>yarp rpc /softneck/rpc:i\n</code></pre> <p>You can tighten and untighten the tendons with the set pos command, which gives a distance(m) value for the motor to rotate. It is suggested to use increments or decrements of 0.01 as a starting value.</p> <pre><code>set pos 0 0.01\n</code></pre> <p>This will shorten the first tendon a length of 0.01m. The ID associated to each motor is shown in the following figure.</p>"},{"location":"softgripper/motors.html","title":"ElectroMechanical Data","text":""},{"location":"softgripper/motors.html#maxon-model-339276-motor","title":"Maxon Model 339276 Motor","text":"<p>The motor's datasheet can be found at this link.</p>"},{"location":"softgripper/motors.html#current-motor-configuration","title":"Current Motor configuration","text":"<p>soft-gripper-current-configuration.csv</p> Motor Passband(current controller) Passband(position controller) Intertia(kgm2 E-7) ID1 2200 150 100 ID2 2000 150 100 ID3 nan nan ID4 2000 150 100 ID5 2200 150 100 ID6 2000 nan ID7 2200 120 60 ID8 2200 150 100 ID9 nan nan"},{"location":"softgripper/motors.html#values-at-nominal-voltage","title":"Values at Nominal Voltage","text":"<p>soft-gripper-motor-NV.csv</p> Nominal voltage 24 V No load speed 7310 rpm No load current 47.6 mA Nominal speed 4390 rpm Nominal torque (max. continuous torque) 27 mNm Nominal current (max. continuous current) 0.766 A Stall torque 114 mNm Stall current 3.74 A Max. efficiency 79 %"},{"location":"softgripper/motors.html#characteristics","title":"Characteristics","text":"<p>soft-gripper-motor-C.csv</p> Terminal resistance phase to phase 6.42 \u2126 Terminal inductance phase to phase 2.75 mH Torque constant 30.5 mNm/A Speed constant 135 rpm/V Speed / torque gradient 12.9 rpm/mNm Mechanical time constant 20.2 ms Rotor inertia 150 gcm\u00b2 Thermal resistance housing-ambient 6.73 K/W Thermal resistance winding-housing 3.92 K/W Thermal time constant winding 11.4 s Thermal time constant motor 296 s Ambient temperature -40...+100 \u00b0C Max. winding temperature +125 \u00b0C"},{"location":"softgripper/motors.html#mechanical-data","title":"Mechanical Data","text":"<p>soft-gripper-motor-MD.csv</p> Bearing type keine Max. speed 10000 rpm Axial play 0 mm; at radial load &lt; 0 N - 0 mm; at radial load &gt; 0 N Max. axial load (dynamic) 0 N Max. force for press fits (static) 0 N (static; shaft supported) 0 N Max. radial load 0 N; 5 mm from flange Number of pole pairs 8 Number of phases 3 Number of autoclave cycles 0 Weight 89 g"},{"location":"softneck/index.html","title":"Soft Neck Related Content","text":""},{"location":"softneck/index.html#soft-neck-related-content","title":"Soft Neck Related Content","text":"<p>The following sections contain comprehensive guides and documentation for the soft neck.</p> <ul> <li>Demo</li> </ul>"},{"location":"softneck/index.html#list-of-publications","title":"List of publications:","text":"<p>Designed by since 2018. The current version of this platform was presented along with an approach for the system identification using MLP techniques in 2022. Further research on this robotic platform as well as the soft arm can be found here. </p> <p>Documentation of these researchs can be found both in Humasoft and SofIA Gitlab and Github repositories.</p> <p></p>"},{"location":"softneck/demo.html","title":"Demo-Space Navigator","text":""},{"location":"softneck/demo.html#demo-space-navigator-inverse-kinematcs","title":"Demo: Space Navigator (Inverse Kinematcs)","text":"<p>The following steps are meant to be launched on the Soft Robotics PC, next to Lisbeth</p> <p>Throughout this section, the required steps to run the Space Navigator demo of the soft neck are described. </p> <ol> <li>Plug the spnav dongle the PC.</li> <li>Plug the PCAN-USB adapter to the PC.</li> <li> <p>On a terminal, run the following command for setting up the CAN bus port:</p> <pre><code>cd ~/Desktop &amp;&amp; sudo ./init_can.sh\n</code></pre> <p>This file contains the following command, which sets up the physical port at a baud rate of 1MHz: </p><pre><code>ip link set can0 up txqueuelen 1000 type can bitrate 1000000 restart-ms 100\n</code></pre> </li> <li> <p>On a terminal, launch yarpserver through the following command:</p> <pre><code>yarpserver --write\n</code></pre> </li> <li> <p>Open the yarpgui for individually launching the different required applications. Press Alt+F2 at the same time to pop up the command window and type yarpmanager.  </p> <p></p> </li> <li> <p>Open SoftNeckControl_App inside the Applications folder and launch the following apps in the described order by clicking the green launch button after selecting said app.  </p> </li> <li>Launch SpaceNavigator.  </li> <li> <p>Launch launchCanBus. At this point you can turn on the Power Supply with a voltage of 16 V and tense the tendons through the easiest method. This is by means of the remote procedure calls (RPC). The RPC commands can be accessed through the following command:</p> <pre><code>yarp rpc /softneck/rpc:i\n</code></pre> <p>You can tighten and untighten the tendons with the set pos command, which gives a distance(m) value for the motor to rotate. It is suggested to use increments or decrements of 0.01 as a starting value.</p> <pre><code>set pos 0 0.01\n</code></pre> <p>This will shorten the first tendon a length of 0.01m. The ID associated to each motor is shown in the following figure.</p> <p></p> </li> <li> <p>Launch SofNeckControl (the first of the two options).</p> </li> <li>Turn on the Space Navigator (A blue LED will start flashing) and launch streamingDeviceController.</li> <li> <p>Launch yarpscope for visualizing the inputs for the three motors through the following command:     </p><pre><code>yarpscope --remote /spacenavigator/mouse --index \"(0 1 2 3 4 5)\" --color \"(Red Green Blue LightRed LightGreen LightBlue)\" --min -1 --max 1\n</code></pre> <p></p> </li> </ol>"},{"location":"softneck/demo.html#additional-notes","title":"Additional Notes","text":"<p>You can troubleshoot any potential issues with the CAN bus by launching the following command and looking for the CAN bus errores messages in here.</p> <pre><code>candump can0\n</code></pre> <p>the port can0 is used as there is only one physical bus, which was setup on the third step</p>"}]}